Instalação KUBECTL
==================
sudo apt-get install curl -y

curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"

chmod +x ./kubectl

sudo mv ./kubectl /usr/local/bin/


Instalação DOCKER
=================
sudo apt-get update

sudo apt-get install docker.io -y


Instalação MINIKUBE
===================
curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.32.0/minikube-linux-amd64 && chmod +x minikube && sudo cp minikube /usr/local/bin/ && rm minikube

(EXECUTAR COMO ROOT) minikube start --vm-driver=none


Acertando as permissões para o Usuário
======================================
sudo mv /root/.kube $HOME/.kube
sudo chown -R $USER $HOME/.kube
sudo chgrp -R $USER $HOME/.kube
sudo mv /root/.minikube $HOME/.minikube
sudo chown -R $USER $HOME/.minikube
sudo chgrp -R $USER $HOME/.minikube

NEW VERSION INSTALL 
===============================
curl -LO "https://storage.googleapis.com/kubernetes-release/release/v1.13.0/bin/linux/amd64/kubectl"

chmod +x ./kubectl

sudo mv ./kubectl /usr/local/bin/COPIAR CÓDIGO
Veja a versão com o comando abaixo:

kubectl version --clientCOPIAR CÓDIGO
O resultado deve ser:

Client Version: version.Info{Major:"1", Minor:"13", GitVersion:"v1.13.0", GitCommit:"ddf47ac13c1a9483ea035a79cd7c10005ff21a6d", GitTreeState:"clean", BuildDate:"2018-12-03T21:04:45Z", GoVersion:"go1.11.2", Compiler:"gc", Platform:"linux/amd64"}

2) Instalação Docker:

sudo apt-get update && sudo apt-get install docker.io -yCOPIAR CÓDIGO
3) Instalação minikube:

curl -Lo minikube https://storage.googleapis.com/minikube/releases/v1.24.0/minikube-linux-amd64 && chmod +x minikube && sudo cp minikube /usr/local/bin/ && rm minikubeCOPIAR CÓDIGO
Agora EXECUTAR COMO ROOT:

minikube start --vm-driver=noneCOPIAR CÓDIGO
Podemos ter o seguinte erro:

minikube v1.10.0 on Ubuntu 18.04
Using the none driver based on user configuration
Sorry, Kubernetes v1.18.1 requires conntrack to be installed in root's pathCOPIAR CÓDIGO
Para resolver precisamos instalar o "conntrack" com o seguinte comando:

sudo apt-get install -y conntrackCOPIAR CÓDIGO
Agora podemos executar novamente como ROOT:

minikube start --vm-driver=noneCOPIAR CÓDIGO
O resultado deve ser:

minikube v1.10.0 on Ubuntu 18.04
Using the none driver based on user configuration
Starting control plane node minikube in cluster minikube
Running on localhost (CPUs=2, Memory=1956MB, Disk=7876MB) ...
minikube 1.12.1 is available! Download it: https://github.com/kubernetes/minikube/releases/tag/v1.12.1
To disable this notice, run: 'minikube config set WantUpdateNotification false'

OS release is Ubuntu 18.04.4 LTS
Preparing Kubernetes v1.18.1 on Docker 19.03.6 ...
   kubelet.resolv-conf=/run/systemd/resolve/resolv.conf
    > kubeadm.sha256: 65 B / 65 B [--------------------------] 100.00% ? p/s 0s
    > kubelet.sha256: 65 B / 65 B [--------------------------] 100.00% ? p/s 0s
    > kubectl.sha256: 65 B / 65 B [--------------------------] 100.00% ? p/s 0s
    > kubectl: 41.99 MiB / 41.99 MiB [--------------] 100.00% 172.03 MiB p/s 0s
    > kubeadm: 37.97 MiB / 37.97 MiB [--------------] 100.00% 121.98 MiB p/s 0s
    > kubelet: 108.02 MiB / 108.02 MiB [------------] 100.00% 132.86 MiB p/s 1s


Configuring local host environment ...

The 'none' driver is designed for experts who need to integrate with an existing VM
Most users should use the newer 'docker' driver instead, which does not require root!
For more information, see: https://minikube.sigs.k8s.io/docs/reference/drivers/none/

kubectl and minikube configuration will be stored in /root
To use kubectl or minikube commands as your own user, you may need to relocate them. For example, to overwrite your own settings, run:

-> sudo mv /root/.kube /root/.minikube $HOME
-> sudo chown -R $USER $HOME/.kube $HOME/.minikube

This can also be done automatically by setting the env var CHANGE_MINIKUBE_NONE_USER=true
Verifying Kubernetes components...
Enabled addons: default-storageclass, storage-provisioner
Done! kubectl is now configured to use "minikube"

/usr/local/bin/kubectl is v1.13.0, which may be incompatible with Kubernetes v1.18.1.
You can also use 'minikube kubectl -- get pods' to invoke a matching versionCOPIAR CÓDIGO
4) Desabilitar mensagem de atualização do minikube

minikube config set WantUpdateNotification falseCOPIAR CÓDIGO
5) Acertando as permissões para o usuário: Primeiro saia do usuário "root":

exitCOPIAR CÓDIGO
Agora execute separadamente os comandos:

sudo mv /root/.kube /root/.minikube $HOME
sudo chown -R $USER $HOME/.kube $HOME/.minikube

FALHA NO MINIKUBE
====================
Muito provavelmente você tem uma versão mais antiga do binário do instalador do minikube . Para verificar sua versão, execute o seguinte comando:

minikube version
Ele deve mostrar a você:

minikube version: v1.24.0
Se mostrar qualquer versão mais antiga, acesse o site do minikube e baixe o binário do instalador do minikube mais recente para o seu sistema operacional. Para a arquitetura Linux x86-64, você pode obtê-lo e instalá-lo com os seguintes comandos:

curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
sudo install minikube-linux-amd64 /usr/local/bin/minikube
Então você pode simplesmente executar:

minikube start
que configurará o cluster kubernetes com sua versão padrão, que para a versão mais recente do Minikube é v1.22.3, exatamente a versão que você precisa. Ou você pode especificar esta versão explicitamente:

minikube start --kubernetes-version=v1.22.3
que também funcionará.

